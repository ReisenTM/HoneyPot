syntax = "proto3"; // 指定proto版本
package node_rpc;     // 指定默认包名

// 指定golang包名
option go_package = "/node_rpc";

//定义rpc服务
service NodeService {
  // 节点注册
  rpc Register (RegisterRequest) returns (BaseResponse) {}
}
message BaseResponse{
  int32 code = 1;
  string msg = 2;
}
message RegisterRequest {
  string ip = 1;
  string mac = 2;
  string node_uid = 3;
  string version = 4;
  string Commit = 5;
  systemInfoMessage systemInfo = 6;
  resourceMessage resourceInfo = 7;
  repeated networkInfoMessage networkList =8;
}

message NodeResourceRequest {
  string node_uid = 1;
  resourceMessage resourceInfo = 2;
}


message systemInfoMessage {
  string  hostName = 1;
  string distributionVersion = 2;
  string coreVersion = 3;
  string systemType = 4;
  string startTime = 5;
}
message resourceMessage {
  int64 cpuCount = 1;
  float cpuUseRate = 2;
  int64 memTotal = 3;
  float  memUseRate = 4;
  int64 diskTotal = 5;
  float  diskUseRate = 6;
  string nodePath = 7;
  int64  nodeResourceOccupancy = 8;
}
message networkInfoMessage {
  string network = 1;
  string ip = 2;
  string net = 3;
  int32 mask = 4;
}
// protoc --go_out=. --go-grpc_out=. *.proto
// 在rpc目录下执行